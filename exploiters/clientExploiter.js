// ReferÃªncia: https://riptutorial.com/node-js/example/22406/a-simple-tcp-client
const Net = require('net');
// The port number and hostname of the server.
const port = 80;
const host = 'www.google.com.br';

// Create a new TCP client.
const client = new Net.Socket();
const REQUEST = `${[
  'GET / HTTP/1.1',
  'Host: google.com.br',
  'Connection: keep-alive',
].join('\r\n')}\r\n\r\n`;

const discoverStrategicIndexes = (str) =>
  [
    str.indexOf('HTTP/1.1'),
    str.indexOf('Content-Type:'),
    str.indexOf('Location:'),
  ];

const mountResponse = (indexes, chunk) => `The document has moved
${chunk.toString().slice(indexes[0], indexes[0] + 8)} 302 Found
${chunk.toString().slice(indexes[1] - 1, indexes[1] + 39)}
domain=${chunk.toString().slice(indexes[2] + 20, indexes[2] + 34)}`;

// Send a connection request to the server.
client.connect({ port, host }, () => {
  // If there is no error, the server has accepted the request and created a new
  // socket dedicated to us.
  // The client can now send data to the server by writing to its socket.
  client.write(REQUEST);
});

// The client can also receive data from the server by reading from its socket.
client.on('data', (chunk) => {
  const indexes = discoverStrategicIndexes(chunk.toString());
  console.log(mountResponse(indexes, chunk));
  // Request an end to the connection after the data has been received.
  client.end();
});

client.on('end', () => {
  console.log('Requested an end to the TCP connection');
});
