// 3 - Criar um server TCP utilizando o módulo net capaz de responder com uma mensagem HTTP
// Utilizando a response capturada no requisito anterior (2), faça um server
// (exploiters/httpServer.js) que responda uma página HTML, faça as devidas modificações na
// response para que retorne uma mensagem com o status code HTTP 200.

const HTTPRESPONSE = `HTTP/1.1 200 OK
Location: https://www.google.com/
Content-Type: text/html; charset=UTF-8
X-Content-Type-Options: nosniff
Date: Thu, 19 Nov 2020 20:36:36 GMT
Expires: Thu, 19 Nov 2020 21:06:36 GMT
Server: sffe
Content-Length: 220
X-XSS-Protection: 0
Cache-Control: public, max-age=1800
Age: 366

<HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
<TITLE>Resposta...</TITLE></HEAD><BODY>
<H1>Protocolos</H1>
O site do Google na verdade é este <a href="https://www.google.com/">aqui</a>.
</BODY></HTML>\r\n`;

const net = require('net');

const server = net.createServer((conn) => {
  console.log('Cliente conectado');
  conn.on('data', (data) => console.log(data));
  conn.setEncoding('utf-8');
  conn.write(HTTPRESPONSE);
  conn.end();
  conn.on('end', () => console.log('Cliente desconectado'));
});

server.listen(8085, () => console.log('Escutando na porta 8085'));
